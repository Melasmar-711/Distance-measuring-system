/*
 * icu.c
 *
 *  Created on: Oct 18, 2021
 *      Author: Mahmoud EL-Asmar
 */


#include "icu.h"


static volatile void (*g_callBackPtr)(void) = NULL_PTR;


ISR(TIMER1_CAPT_vect)
{
	if(g_callBackPtr != NULL_PTR)
	{
		(*g_callBackPtr)();
	}

}


void ICU_init(ICU_ConfigType *configurations)
{
	/* Configure ICP1/PD6 as i/p pin */
	DDRD &= ~(1<<PD6);
	/*setting the clock of timer 1*/
	TCCR1B=(TCCR1B&0xF8)|(configurations->ICU_clock);
	/*setting the type of edge to be selected at the beginning */
	TCCR1B=(TCCR1B&0xBF)|((configurations->TRIGGER_egde)<<6);
	/*clearing the output compare flags*/
	TCCR1A=(TCCR1A&0xF3)|(3<<FOC1B);
	/* Initial Value for Timer1 */
	TCNT1 = 0;
	/* Initial Value for the input capture register */
	ICR1 = 0;
	/* Enable the Input Capture interrupt to generate an interrupt when edge is detected on ICP1/PD6 pin */
	TIMSK |= (1<<TICIE1);

}

void ICU_setCallBack(void(*ptr_fun)(void))
{
	g_callBackPtr=ptr_fun;

}

void ICU_edgeDetectionType(edge_type new_edge)
{
	if (new_edge==FALLING_edge)
	{
		CLEAR_BIT(TCCR1B,edge_Type_Bit);
	}
	else
	{
		SET_BIT(TCCR1B,edge_Type_Bit)
	}
}
